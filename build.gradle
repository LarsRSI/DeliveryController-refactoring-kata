plugins {
    id 'java'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.7.4'
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("com.sendgrid:sendgrid-java:4.9.1")

    testImplementation(platform("org.junit:junit-bom:5.8.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.assertj:assertj-core:3.22.0")
    testImplementation("com.approvaltests:approvaltests:15.2.0")
    testImplementation("com.larseckart:junit-tcr-extensions:0.0.1")
    testImplementation("org.mockito:mockito-core:4.6.0")
    testImplementation("org.mockito:mockito-junit-jupiter:4.5.1")
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-Xlint:all")
    options.incremental = true
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("kata.*")
    }
}
graalvmNative.toolchainDetection = false

application {
    mainClass.set("kata.Application")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

project.tasks.check.dependsOn("pitest")
pitest {
    junit5PluginVersion = '0.15'
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    targetClasses = ['kata.*']
    pitestVersion = '1.7.0'
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}
